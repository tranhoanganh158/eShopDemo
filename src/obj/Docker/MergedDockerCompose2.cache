name: dockercompose3160418190736093081
services:
  basket-api:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Services/Basket/Basket.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Basket.API
    container_name: Basket.API
    depends_on:
      basketdata:
        condition: service_started
      identity-api:
        condition: service_started
      rabbitmq:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ApplicationInsights__InstrumentationKey: ""
      ConnectionStrings__EventBus: rabbitmq
      ConnectionStrings__Redis: basketdata
      EventBus__Password: ""
      EventBus__UserName: ""
      Identity__ExternalUrl: http://host.docker.internal:5105
      Identity__Url: http://identity-api
      Kestrel__Endpoints__GRPC__Protocols: Http2
      Kestrel__Endpoints__GRPC__Url: http://0.0.0.0:81
      Kestrel__Endpoints__HTTP__Url: http://0.0.0.0:80
      OrchestratorType: ""
      PATH_BASE: /basket-api
      UseLoadTest: "False"
    image: eshop/basket.api:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Basket.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Basket.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5103"
      protocol: tcp
    - mode: ingress
      target: 81
      published: "9103"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  basketdata:
    image: redis:alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    volumes:
    - type: volume
      source: eshop-basketdata
      target: /data
      volume: {}
  catalog-api:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Catalog.API
    container_name: Catalog.API
    depends_on:
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ApplicationInsights__InstrumentationKey: ""
      AzureStorageAccountKey: ""
      AzureStorageAccountName: ""
      AzureStorageEnabled: "False"
      ConnectionStrings__CatalogDb: Server=sqldata;Database=Microsoft.eShopOnContainers.Services.CatalogDb;User
        Id=sa;Password=Pass@word;Encrypt=False;TrustServerCertificate=true
      ConnectionStrings__EventBus: rabbitmq
      EventBus__Password: ""
      EventBus__UserName: ""
      Kestrel__Endpoints__GRPC__Protocols: Http2
      Kestrel__Endpoints__GRPC__Url: http://0.0.0.0:81
      Kestrel__Endpoints__HTTP__Url: http://0.0.0.0:80
      OrchestratorType: ""
      PATH_BASE: /catalog-api
      PicBaseUrl: http://host.docker.internal:5202/c/api/v1/catalog/items/[0]/pic/
      UseCustomizationData: "True"
    image: eshop/catalog.api:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Catalog.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Catalog.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5101"
      protocol: tcp
    - mode: ingress
      target: 81
      published: "9101"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  identity-api:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Services/Identity/Identity.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Identity.API
    container_name: Identity.API
    depends_on:
      sqldata:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      BasketApiClient: http://host.docker.internal:5103
      ConnectionStrings__IdentityDb: Server=sqldata;Database=Microsoft.eShopOnContainers.Service.IdentityDb;User
        Id=sa;Password=Pass@word;Encrypt=False;TrustServerCertificate=true
      MobileShoppingAggClient: http://host.docker.internal:5120
      MvcClient: http://host.docker.internal:5100
      OrchestratorType: ""
      OrderingApiClient: http://host.docker.internal:5102
      SpaClient: http://host.docker.internal:5104
      UseCustomizationData: "True"
      WebShoppingAggClient: http://host.docker.internal:5121
      WebhooksApiClient: http://host.docker.internal:5113
      WebhooksWebClient: http://host.docker.internal:5114
      XamarinCallback: http://10.121.122.162:5105/xamarincallback
    image: eshop/identity.api:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Identity.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Identity.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5105"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  mobileshoppingagg:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: ApiGateways/Mobile.Bff.Shopping/aggregator/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Mobile.Shopping.HttpAggregator
    container_name: Mobile.Shopping.HttpAggregator
    depends_on:
      basket-api:
        condition: service_started
      catalog-api:
        condition: service_started
      identity-api:
        condition: service_started
      nosqldata:
        condition: service_started
      ordering-api:
        condition: service_started
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      BasketUrlHC: http://basket-api/hc
      CatalogUrlHC: http://catalog-api/hc
      Identity__ExternalUrl: http://host.docker.internal:5105
      Identity__Url: http://identity-api
      IdentityUrlHC: http://identity-api/hc
      OrderingUrlHC: http://ordering-api/hc
      PaymentUrlHC: http://payment-api/hc
      urls__basket: http://basket-api
      urls__catalog: http://catalog-api
      urls__grpcBasket: http://basket-api:81
      urls__grpcCatalog: http://catalog-api:81
      urls__grpcOrdering: http://ordering-api:81
      urls__identity: http://identity-api
      urls__orders: http://ordering-api
    image: eshop/mobileshoppingagg:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Mobile.Shopping.HttpAggregator
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Mobile.Shopping.HttpAggregator.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5120"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  mobileshoppingapigw:
    image: envoyproxy/envoy:v1.11.1
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5200"
      protocol: tcp
    - mode: ingress
      target: 8001
      published: "15200"
      protocol: tcp
    volumes:
    - type: bind
      source: F:\Projects\eShopContainer\src\ApiGateways\Envoy\config\mobileshopping
      target: /etc/envoy
      bind:
        create_host_path: true
  nosqldata:
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    volumes:
    - type: volume
      source: eshop-nosqldata
      target: /data/db
      volume: {}
  ordering-api:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Ordering.API
    container_name: Ordering.API
    depends_on:
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ApplicationInsights__InstrumentationKey: ""
      AzureServiceBusEnabled: "False"
      CheckUpdateTime: "30000"
      ConnectionStrings__EventBus: rabbitmq
      ConnectionStrings__OrderingDb: Server=sqldata;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User
        Id=sa;Password=Pass@word;Encrypt=False;TrustServerCertificate=true
      EventBus__Password: ""
      EventBus__UserName: ""
      GRPC_PORT: "81"
      Identity__ExternalUrl: http://host.docker.internal:5105
      Identity__Url: http://identity-api
      Kestrel__Endpoints__GRPC__Protocols: Http2
      Kestrel__Endpoints__GRPC__Url: http://0.0.0.0:81
      Kestrel__Endpoints__HTTP__Url: http://0.0.0.0:80
      OrchestratorType: ""
      PATH_BASE: /ordering-api
      PORT: "80"
      UseCustomizationData: "True"
      UseLoadTest: "False"
    image: eshop/ordering.api:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Ordering.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Ordering.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5102"
      protocol: tcp
    - mode: ingress
      target: 81
      published: "9102"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  ordering-backgroundtasks:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Services/Ordering/Ordering.BackgroundTasks/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Ordering.BackgroundTasks
    container_name: Ordering.BackgroundTasks
    depends_on:
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      AzureServiceBusEnabled: "False"
      CheckUpdateTime: "30000"
      ConnectionStrings__EventBus: rabbitmq
      ConnectionStrings__OrderingDb: Server=sqldata;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User
        Id=sa;Password=Pass@word;Encrypt=False;TrustServerCertificate=true
      EventBus__Password: ""
      EventBus__UserName: ""
      GracePeriodTime: "1"
      OrchestratorType: ""
      UseCustomizationData: "True"
      UseLoadTest: "False"
    image: eshop/ordering.backgroundtasks:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Ordering.BackgroundTasks
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Ordering.BackgroundTasks.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5111"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  ordering-signalrhub:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Services/Ordering/Ordering.SignalrHub/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Ordering.SignalrHub
    container_name: Ordering.SignalrHub
    depends_on:
      basket-api:
        condition: service_started
      catalog-api:
        condition: service_started
      identity-api:
        condition: service_started
      nosqldata:
        condition: service_started
      ordering-api:
        condition: service_started
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      AzureServiceBusEnabled: "False"
      ConnectionStrings__EventBus: rabbitmq
      EventBus__Password: ""
      EventBus__UserName: ""
      Identity__Url: http://identity-api
      OrchestratorType: ""
    image: eshop/ordering.signalrhub:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Ordering.SignalrHub
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Ordering.SignalrHub.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5112"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  payment-api:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Services/Payment/Payment.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Payment.API
    container_name: Payment.API
    depends_on:
      rabbitmq:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      AzureServiceBusEnabled: "False"
      ConnectionStrings__EventBus: rabbitmq
      EventBus__Password: ""
      EventBus__UserName: ""
      OrchestratorType: ""
    image: eshop/payment.api:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Payment.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Payment.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5108"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  rabbitmq:
    image: rabbitmq:3-management-alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
  seq:
    environment:
      ACCEPT_EULA: "Y"
    image: datalust/seq:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5340"
      protocol: tcp
  sqldata:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Pass@word
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "5433"
      protocol: tcp
    volumes:
    - type: volume
      source: eshop-sqldata
      target: /var/opt/mssql
      volume: {}
  webhooks-api:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Services/Webhooks/Webhooks.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Webhooks.API
    container_name: Webhooks.API
    depends_on:
      sqldata:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionStrings__EventBus: rabbitmq
      ConnectionStrings__WebhooksDb: Server=sqldata;Database=Microsoft.eShopOnContainers.Services.WebhooksDb;User
        Id=sa;Password=Pass@word;Encrypt=False;TrustServerCertificate=true
      EventBus__Password: ""
      EventBus__UserName: ""
      Identity__ExternalUrl: http://host.docker.internal:5105
      Identity__Url: http://identity-api
    image: eshop/webhooks.api:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Webhooks.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Webhooks.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5113"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  webhooks-client:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Web/WebhookClient/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: WebhookClient
    container_name: WebhookClient
    depends_on:
      webhooks-api:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_URLS: http://0.0.0.0:80
      CallBackUrl: http://host.docker.internal:5114
      IdentityUrl: http://host.docker.internal:5105
      SelfUrl: http://webhooks-client/
      Token: 6168DB8D-DC58-4094-AF24-483278923590
      WebhooksUrl: http://webhooks-api
    image: eshop/webhooks.client:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: WebhookClient
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/WebhookClient.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5114"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  webmvc:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Web/WebMVC/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: WebMVC
    container_name: WebMVC
    depends_on:
      webshoppingagg:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      IdentityUrl: http://host.docker.internal:5105
      IdentityUrlHC: http://identity-api/hc
      OrchestratorType: ""
      PurchaseUrl: http://webshoppingagg
      SignalrHubUrl: http://host.docker.internal:5121
      UseCustomizationData: "True"
      UseLoadTest: "False"
    image: eshop/webmvc:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: WebMVC
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/WebMVC.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5100"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  webshoppingagg:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: ApiGateways/Web.Bff.Shopping/aggregator/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Web.Shopping.HttpAggregator
    container_name: Web.Shopping.HttpAggregator
    depends_on:
      basket-api:
        condition: service_started
      catalog-api:
        condition: service_started
      identity-api:
        condition: service_started
      nosqldata:
        condition: service_started
      ordering-api:
        condition: service_started
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      BasketUrlHC: http://basket-api/hc
      CatalogUrlHC: http://catalog-api/hc
      Identity__ExternalUrl: http://host.docker.internal:5105
      Identity__Url: http://identity-api
      IdentityUrlHC: http://identity-api/hc
      OrderingUrlHC: http://ordering-api/hc
      PaymentUrlHC: http://payment-api/hc
      ReverseProxy__Clusters__basket__Destinations__destination0__Address: http://basket-api
      ReverseProxy__Clusters__catalog__Destinations__destination0__Address: http://catalog-api
      ReverseProxy__Clusters__orders__Destinations__destination0__Address: http://ordering-api
      ReverseProxy__Clusters__signalr__Destinations__destination0__Address: http://ordering-signalrhub
      urls__basket: http://basket-api
      urls__catalog: http://catalog-api
      urls__grpcBasket: http://basket-api:81
      urls__grpcCatalog: http://catalog-api:81
      urls__grpcOrdering: http://ordering-api:81
      urls__identity: http://identity-api
      urls__orders: http://ordering-api
    image: eshop/webshoppingagg:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: Web.Shopping.HttpAggregator
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Web.Shopping.HttpAggregator.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5121"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  webshoppingapigw:
    image: envoyproxy/envoy:v1.11.1
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5202"
      protocol: tcp
    - mode: ingress
      target: 8001
      published: "15202"
      protocol: tcp
    volumes:
    - type: bind
      source: F:\Projects\eShopContainer\src\ApiGateways\Envoy\config\webshopping
      target: /etc/envoy
      bind:
        create_host_path: true
  webspa:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Web/WebSPA/Dockerfile
      args:
        NODE_IMAGE: node:16-bullseye
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: WebSPA
    container_name: WebSPA
    depends_on:
      webshoppingagg:
        condition: service_started
      webshoppingapigw:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      Identity__Url: http://host.docker.internal:5105
      IdentityUrlHC: http://identity-api/hc
      OrchestratorType: ""
      PurchaseUrl: http://host.docker.internal:5202
      SignalrHubUrl: http://host.docker.internal:5202
      UseCustomizationData: "True"
    image: eshop/webspa:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: WebSPA
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/WebSPA.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5104"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  webstatus:
    build:
      context: F:\Projects\eShopContainer\src
      dockerfile: Web/WebStatus/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: WebStatus
    container_name: WebStatus
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      HealthChecksUI__HealthChecks__0__Name: WebMVC HTTP Check
      HealthChecksUI__HealthChecks__0__Uri: http://webmvc/hc
      HealthChecksUI__HealthChecks__1__Name: WebSPA HTTP Check
      HealthChecksUI__HealthChecks__1__Uri: http://webspa/hc
      HealthChecksUI__HealthChecks__2__Name: Web Shopping Aggregator GW HTTP Check
      HealthChecksUI__HealthChecks__2__Uri: http://webshoppingagg/hc
      HealthChecksUI__HealthChecks__3__Name: Mobile Shopping Aggregator HTTP Check
      HealthChecksUI__HealthChecks__3__Uri: http://mobileshoppingagg/hc
      HealthChecksUI__HealthChecks__4__Name: Ordering HTTP Check
      HealthChecksUI__HealthChecks__4__Uri: http://ordering-api/hc
      HealthChecksUI__HealthChecks__5__Name: Basket HTTP Check
      HealthChecksUI__HealthChecks__5__Uri: http://basket-api/hc
      HealthChecksUI__HealthChecks__6__Name: Catalog HTTP Check
      HealthChecksUI__HealthChecks__6__Uri: http://catalog-api/hc
      HealthChecksUI__HealthChecks__7__Name: Identity HTTP Check
      HealthChecksUI__HealthChecks__7__Uri: http://identity-api/hc
      HealthChecksUI__HealthChecks__8__Name: Payments HTTP Check
      HealthChecksUI__HealthChecks__8__Uri: http://payment-api/hc
      HealthChecksUI__HealthChecks__9__Name: Ordering SignalRHub HTTP Check
      HealthChecksUI__HealthChecks__9__Uri: http://ordering-signalrhub/hc
      HealthChecksUI__HealthChecks__10__Name: Ordering HTTP Background Check
      HealthChecksUI__HealthChecks__10__Uri: http://ordering-backgroundtasks/hc
      OrchestratorType: ""
    image: eshop/webstatus:linux-latest
    labels:
      com.microsoft.visual-studio.project-name: WebStatus
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/WebStatus.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5107"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Admin\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose3160418190736093081_default
volumes:
  eshop-basketdata:
    name: dockercompose3160418190736093081_eshop-basketdata
  eshop-nosqldata:
    name: dockercompose3160418190736093081_eshop-nosqldata
  eshop-sqldata:
    name: dockercompose3160418190736093081_eshop-sqldata